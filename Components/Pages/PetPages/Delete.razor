@page "/pets/delete"
@inject AmigoPeludo.Data.AmigoPeludoContext DB
@using AmigoPeludo.Models
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<h3>Você tem certeza que deseja deletar este pet?</h3>
<div>
    <hr />
    @if (pet is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <ul class="row">
            <li>Nome: @pet.nome</li>
            <li>Data de Nascimento: @pet.dataNascimento</li>
            <li>Especie: @pet.especie</li>
            <li>Raca: @pet.raca</li>
            <li>Cor: @pet.cor</li>
            <li>Sexo: @pet.sexo</li>
        </ul>
        <EditForm method="post" Model="pet" OnValidSubmit="DeletePet" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(pet is null)">Delete</button> |
            <a href="/paginaInicial">Voltar para pagina inicial</a>
        </EditForm>
    }
</div>

@code {
    Pet? pet;

    [SupplyParameterFromQuery]
    public int id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        pet = await DB.Pet.FirstOrDefaultAsync(m => m.id == id);

        if (pet is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeletePet()
    {
        DB.Pet.Remove(pet!);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/paginaInicial");
    }
}
